name: Deploy

on:
  push:
    branches:
      - main
  repository_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 18
    - run: yarn install
    - run: yarn build
      env:
        NODE_ENV: production

    - name: Install wrangler
      run: npm install -g wrangler

    - name: Check and Create KV Namespace
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      run: |
        KV_NAMESPACE="KV_STATUS_PAGE"
        echo "Checking for KV namespace: $KV_NAMESPACE"
        LIST_OUTPUT=$(wrangler kv namespace list)
        echo "KV namespace list output: $LIST_OUTPUT"
        
        KV_ID=$(echo "$LIST_OUTPUT" | jq -r '.[] | select(.title == "cf-workers-status-page-'$KV_NAMESPACE'") | .id')
        
        if [ -z "$KV_ID" ]; then
            echo "KV namespace $KV_NAMESPACE does not exist. Creating..."
            CREATE_OUTPUT=$(wrangler kv namespace create "$KV_NAMESPACE")
            echo "Create KV namespace output: $CREATE_OUTPUT"
            KV_ID=$(echo "$CREATE_OUTPUT" | sed -n 's/.*id = "\([^"]*\)".*/\1/p')
            
            if [ -z "$KV_ID" ]; then
                echo "Failed to extract KV ID. Full output: $CREATE_OUTPUT"
                exit 1
            fi
            
            echo "KV namespace $KV_NAMESPACE created successfully with ID: $KV_ID"
        else
          echo "KV namespace $KV_NAMESPACE already exists with ID: $KV_ID"
        fi
        echo "KV_ID=$KV_ID" >> $GITHUB_ENV
  
    - name: Setup KV and Environment
      run: |
        wrangler kv:namespace create KV_STATUS_PAGE || true
        export KV_NAMESPACE_ID=$(npx @cloudflare/wrangler@3 kv:namespace list 2> >(tee stderr.log >&2) | head -1 | node -pe "JSON.parse(fs.readFileSync('/dev/stdin').toString()).find(kv => kv.title.includes('KV_STATUS_PAGE')).id")
        echo "[env.production]" >> wrangler.toml
        echo "kv_namespaces = [{binding=\"KV_STATUS_PAGE\", id=\"${KV_NAMESPACE_ID}\"}]" >> wrangler.toml
      env:
        CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

    - name: Publish
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CF_API_TOKEN }}
        postCommands: |
          yarn kv-gc
        secrets: |
          SECRET_SLACK_WEBHOOK_URL
          SECRET_TELEGRAM_API_TOKEN
          SECRET_TELEGRAM_CHAT_ID
          SECRET_DISCORD_WEBHOOK_URL
        environment: production
      env:
        CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        SECRET_SLACK_WEBHOOK_URL: ${{ secrets.SECRET_SLACK_WEBHOOK_URL || 'default-gh-action-secret' }}
        SECRET_TELEGRAM_API_TOKEN: ${{ secrets.SECRET_TELEGRAM_API_TOKEN || 'default-gh-action-secret' }}
        SECRET_TELEGRAM_CHAT_ID: ${{ secrets.SECRET_TELEGRAM_CHAT_ID || 'default-gh-action-secret' }}
        SECRET_DISCORD_WEBHOOK_URL: ${{ secrets.SECRET_DISCORD_WEBHOOK_URL || 'default-gh-action-secret' }}
